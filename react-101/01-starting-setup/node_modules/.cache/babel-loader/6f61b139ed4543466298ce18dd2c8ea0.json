{"ast":null,"code":"var _jsxFileName = \"/Users/jflobeck/Desktop/react-accelerator-practice/react-101/01-starting-setup/src/components/NoteLayout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./NoteLayout.css\";\nimport Sidebar from \"./Sidebar\";\nimport SelectedNote from \"./SelectedNote\";\nimport Form from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteLayout = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false); // const toggleEditing = () => {\n  //   setIsEditing(!isEditing);\n  //   setIsFormOpen(!isFormOpen);\n  //   console.log(\"editing is set to: \", isEditing);\n  // };\n\n  const [isFormOpen, setIsFormOpen] = useState(false); //handleformopen\n\n  const toggleFormOpen = options => {\n    if ((options === null || options === void 0 ? void 0 : options.edit) === true) {\n      setIsEditing(true);\n    } else {\n      setIsEditing(false);\n    }\n\n    setIsFormOpen(!isFormOpen);\n  };\n\n  const [notes, setNotes] = useState([{\n    header: \"My Special Note 1\",\n    timestamp: \"Last Updated: 1:37PM 7/26/19\",\n    body: \"1 might remember the Dell computer commercials in which a youth reports this exciting news to his friends that they are about to get their new computer by telling them, “Dude, you’re getting a Dell!” It was a cute series but it reflects the excitement young people get about anything new, particularly if it’s a new machine.\"\n  }, {\n    header: \"My Special Note 2\",\n    timestamp: \"Last Updated: 1:37PM 7/26/20\",\n    body: \"2 might remember the Dell computer commercials in which a youth reports this exciting news to his friends that they are about to get their new computer by telling them, “Dude, you’re getting a Dell!” It was a cute series but it reflects the excitement young people get about anything new, particularly if it’s a new machine.\"\n  }, {\n    header: \"My Special Note 3\",\n    timestamp: \"Last Updated: 1:37PM 7/26/20\",\n    body: \"3 might remember the Dell computer commercials in which a youth reports this exciting news to his friends that they are about to get their new computer by telling them, “Dude, you’re getting a Dell!” It was a cute series but it reflects the excitement young people get about anything new, particularly if it’s a new machine.\"\n  }]); //active note state and handler to display the click on note in main pane\n\n  const [activeNoteIndex, setActiveNoteIndex] = useState(0);\n\n  const handleNotesSelect = i => {\n    setActiveNoteIndex(i);\n  }; //this handler filters out the currently displayed note once on click fires on delete btn\n\n\n  const handleDeletedNote = () => {\n    const newNotes = notes.filter(note => note.header !== notes[activeNoteIndex].header);\n    setNotes(newNotes);\n  }; //Delete & edit functions and pass as prop to selected note\n\n\n  const handleNewNote = enteredNoteData => {\n    // console.log(enteredNoteData);\n    const addNewNote = [...notes];\n    addNewNote.push(enteredNoteData);\n    setNotes(addNewNote);\n    setIsFormOpen(!isFormOpen);\n  };\n\n  const updateNote = () => {\n    const prevState = notes; //get active note from prevState\n    //update note with edited values\n    //replace notes state with ammended prevState\n  };\n\n  const handleSave = formData => {\n    if (isEditing) {//\n    } else {\n      handleNewNote(formData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"layout\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      notes: notes,\n      onNoteSelect: handleNotesSelect,\n      onCreateBtn: toggleFormOpen,\n      on: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), isFormOpen ? /*#__PURE__*/_jsxDEV(Form, {\n      onSave: handleSave,\n      selectedNote: notes[activeNoteIndex],\n      isEditing: isEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SelectedNote, {\n      selectedNote: notes[activeNoteIndex],\n      onNoteDelete: handleDeletedNote,\n      onEditBtnClick: () => toggleFormOpen({\n        edit: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteLayout, \"wNw5CY+dzfO8HISvcEmMc2EpNK0=\");\n\n_c = NoteLayout;\nexport default NoteLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteLayout\");","map":{"version":3,"sources":["/Users/jflobeck/Desktop/react-accelerator-practice/react-101/01-starting-setup/src/components/NoteLayout.js"],"names":["React","useState","Sidebar","SelectedNote","Form","NoteLayout","props","isEditing","setIsEditing","isFormOpen","setIsFormOpen","toggleFormOpen","options","edit","notes","setNotes","header","timestamp","body","activeNoteIndex","setActiveNoteIndex","handleNotesSelect","i","handleDeletedNote","newNotes","filter","note","handleNewNote","enteredNoteData","addNewNote","push","updateNote","prevState","handleSave","formData"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./NoteLayout.css\";\nimport Sidebar from \"./Sidebar\";\nimport SelectedNote from \"./SelectedNote\";\nimport Form from \"./Form\";\n\nconst NoteLayout = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  // const toggleEditing = () => {\n  //   setIsEditing(!isEditing);\n  //   setIsFormOpen(!isFormOpen);\n  //   console.log(\"editing is set to: \", isEditing);\n  // };\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  //handleformopen\n  const toggleFormOpen = (options) => {\n    if (options?.edit === true) {\n      setIsEditing(true);\n    } else {\n      setIsEditing(false);\n    }\n    setIsFormOpen(!isFormOpen);\n  };\n\n  const [notes, setNotes] = useState([\n    {\n      header: \"My Special Note 1\",\n      timestamp: \"Last Updated: 1:37PM 7/26/19\",\n      body: \"1 might remember the Dell computer commercials in which a youth reports this exciting news to his friends that they are about to get their new computer by telling them, “Dude, you’re getting a Dell!” It was a cute series but it reflects the excitement young people get about anything new, particularly if it’s a new machine.\",\n    },\n    {\n      header: \"My Special Note 2\",\n      timestamp: \"Last Updated: 1:37PM 7/26/20\",\n      body: \"2 might remember the Dell computer commercials in which a youth reports this exciting news to his friends that they are about to get their new computer by telling them, “Dude, you’re getting a Dell!” It was a cute series but it reflects the excitement young people get about anything new, particularly if it’s a new machine.\",\n    },\n    {\n      header: \"My Special Note 3\",\n      timestamp: \"Last Updated: 1:37PM 7/26/20\",\n      body: \"3 might remember the Dell computer commercials in which a youth reports this exciting news to his friends that they are about to get their new computer by telling them, “Dude, you’re getting a Dell!” It was a cute series but it reflects the excitement young people get about anything new, particularly if it’s a new machine.\",\n    },\n  ]);\n  //active note state and handler to display the click on note in main pane\n  const [activeNoteIndex, setActiveNoteIndex] = useState(0);\n\n  const handleNotesSelect = (i) => {\n    setActiveNoteIndex(i);\n  };\n  //this handler filters out the currently displayed note once on click fires on delete btn\n  const handleDeletedNote = () => {\n    const newNotes = notes.filter(\n      (note) => note.header !== notes[activeNoteIndex].header\n    );\n    setNotes(newNotes);\n  };\n\n  //Delete & edit functions and pass as prop to selected note\n  const handleNewNote = (enteredNoteData) => {\n    // console.log(enteredNoteData);\n    const addNewNote = [...notes];\n    addNewNote.push(enteredNoteData);\n    setNotes(addNewNote);\n    setIsFormOpen(!isFormOpen);\n  };\n\n  const updateNote = () => {\n    const prevState = notes;\n    //get active note from prevState\n\n    //update note with edited values\n\n    //replace notes state with ammended prevState\n  };\n  const handleSave = (formData) => {\n    if (isEditing) {\n      //\n    } else {\n      handleNewNote(formData);\n    }\n  };\n\n  return (\n    <section className=\"layout\">\n      <Sidebar\n        notes={notes}\n        onNoteSelect={handleNotesSelect}\n        onCreateBtn={toggleFormOpen}\n        on\n      />\n      {isFormOpen ? (\n        <Form\n          onSave={handleSave}\n          selectedNote={notes[activeNoteIndex]}\n          isEditing={isEditing}\n        />\n      ) : (\n        <SelectedNote\n          selectedNote={notes[activeNoteIndex]}\n          onNoteDelete={handleDeletedNote}\n          onEditBtnClick={() => toggleFormOpen({ edit: true })}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default NoteLayout;\n"]},"metadata":{},"sourceType":"module"}